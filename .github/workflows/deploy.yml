name: Deploy to Raspberry Pi (Self-hosted)

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted  # 라즈베리파이에서 실행
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci
          cd ../server && npm ci

      - name: Build client
        run: cd client && npm run build
        env:
          NODE_ENV: production
          VITE_API_URL: http://subdevpi.mywire.org:5000

      - name: Deploy to production directory
        run: |
          # 프로덕션 디렉토리로 파일 복사
          sudo mkdir -p /home/sub/app/modohana-api
          sudo cp -r client/dist /home/sub/app/modohana-api/client/
          sudo cp -r server /home/sub/app/modohana-api/
          sudo cp ecosystem.config.js /home/sub/app/modohana-api/
          sudo cp package.json /home/sub/app/modohana-api/
          sudo chown -R sub:sub /home/sub/app/modohana-api

      - name: Install server dependencies
        run: |
          cd /home/sub/app/modohana-api/server
          npm ci --production

      - name: Restart services with PM2
        run: |
          cd /home/sub/app/modohana-api
          
          # 환경 변수 설정
          export NODE_ENV=production
          export PORT=5000
          export CLIENT_URL=http://subdevpi.mywire.org:4000
          
          # PM2로 재시작
          pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
          pm2 save

      - name: Health check
        run: |
          sleep 5
          curl -f http://localhost:5000/api/health || exit 1
          curl -f http://localhost:4000 || exit 1

      - name: Deployment complete
        run: |
          echo "✅ 배포 완료!"
          echo "🌐 클라이언트: http://subdevpi.mywire.org:4000"
          echo "🔌 서버: http://subdevpi.mywire.org:5000"